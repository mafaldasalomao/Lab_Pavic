

%u-net bclocked
unetBlock = @(block) [
    convolution2dLayer(3,2^(5+block))
    reluLayer
    convolution2dLayer(3,2^(5+block))
    reluLayer
    maxPooling2dLayer(2,"Stride",2)];

net = blockedNetwork(unetBlock,4,"NamePrefix","encoder_")
net = initialize(net,dlarray(zeros(224,224,3),"SSC"));
analyzeNetwork(net)

%%Load net pre trained

depth = 4;
[encoder,outputNames] = pretrainedEncoderNetwork('googlenet',depth);

%Determine the input size of the encoder network.
inputSize = encoder.Layers(1).InputSize;
%Determine the output size of the activation layers in the encoder network
% by creating a sample data input and then calling forward, which returns the activations.
exampleInput = dlarray(zeros(inputSize),'SSC');
exampleOutput = cell(1,length(outputNames));
[exampleOutput{:}] = forward(encoder,exampleInput,'Outputs',outputNames);



Determine the number of channels in the decoder blocks as the length of the third channel in each activation.

numChannels = cellfun(@(x) size(extractdata(x),3),exampleOutput);
numChannels = fliplr(numChannels(1:end-1));